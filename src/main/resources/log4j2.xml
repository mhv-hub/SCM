<?xml version="1.0" encoding="UTF-8"?>
<Configuration status="DEBUG">
    <Properties>
        <Property name="LOG_PATTERN">
            %d{yyyy-MM-dd HH:mm:ss.SSS} %5p ${hostName} --- [%15.15t] %-40.40c{1.} : %m%n%ex
        </Property>
    </Properties>
    <Appenders>
        <Console name="LogToConsole" target="SYSTEM_OUT">
            <PatternLayout pattern="${LOG_PATTERN}" />
        </Console>
        <RollingFile name="LogToFile" fileName="logs/application.log"
            filePattern="logs/application-%d{yyyy-MM-dd}-%i.log">
            <PatternLayout>
                <Pattern>${LOG_PATTERN}</Pattern>
            </PatternLayout>
            <Policies>
                <SizeBasedTriggeringPolicy size="10MB" />
            </Policies>
            <DefaultRolloverStrategy max="10" />
        </RollingFile>
        <RollingFile name="LogToErrorFile" fileName="logs/application-error.log"
            filePattern="logs/application-error-%d{yyyy-MM-dd}-%i.log">
            <PatternLayout>
                <Pattern>${LOG_PATTERN}</Pattern>
            </PatternLayout>
            <Policies>
                <SizeBasedTriggeringPolicy size="10MB" />
            </Policies>
            <DefaultRolloverStrategy max="10" />
        </RollingFile>
    </Appenders>
    <Loggers>
        <Root level="info">
            <AppenderRef ref="LogToConsole" />
        </Root>
        <!-- Name of logger should be the parent package, log from other packages will not be captured -->
        <!-- Order should be increasing first root and then other logger. inside logger, level should be error, warn, info, debug, trace -->
        <Logger name="com.smart.controller" additivity="false">
            <AppenderRef ref="LogToErrorFile" level="error" />
            <AppenderRef ref="LogToFile" level="info" />
        </Logger>
    </Loggers>
</Configuration> <!-- 
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

private static final Logger logger = LogManager.getLogger(Log4j2DemoApplication.class);
logger.debug("Debugging log");
logger.info("Info log");
logger.warn("This is a warning!");
logger.error("We have an Error");
logger.fatal("Fatal error");
-->